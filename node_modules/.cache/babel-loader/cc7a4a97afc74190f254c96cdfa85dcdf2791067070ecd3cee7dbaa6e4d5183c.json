{"ast":null,"code":"var _jsxFileName = \"/Users/dohun/rh-project/src/components/CheckList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./CheckList.css\";\nimport { useState, useEffect } from \"react\";\nimport { getData, setData } from \"../services/doc.services\";\nimport { isDisabled } from \"@testing-library/user-event/dist/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CheckList = () => {\n  _s();\n  const [db, setDb] = useState([]);\n  const [todos, setTodos] = useState(\"\");\n  const addTodos = value => {\n    let nextId;\n    if (db.length === 0) {\n      nextId = \"0\";\n    } else {\n      nextId = parseInt(db[db.length - 1].id + 1).toString();\n    }\n    setDb([...db, {\n      content: value,\n      id: nextId,\n      checked: false,\n      modify: false\n    }]);\n    setData(\"toDosDB\", [...db, {\n      content: value,\n      id: nextId,\n      checked: false,\n      modify: false\n    }]);\n    setTodos(\"\"); //todos 값 초기화\n  };\n\n  const deleteTodos = id => {\n    let index = db.findIndex(value => value.id === id);\n    let tmp = [...db];\n    tmp.splice(index, 1);\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n  const modifyMode = id => {\n    let index = db.findIndex(value => value.id === id);\n    let tmp = [...db];\n    tmp[index].modify = true;\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n  const modifyEndMode = id => {\n    let index = db.findIndex(value => value.id === id);\n    let tmp = [...db];\n    tmp[index].modify = false;\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n\n  //만들고싶은 배열 = 원래배열.splice(index, 1)\n\n  const handleCheck = id => {\n    let index = db.findIndex(value => value.id === id);\n    let tmp = [...db];\n    tmp[index].checked = !tmp[index].checked;\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n  useEffect(() => {\n    if (getData(\"toDosDB\") === null) {\n      setData(\"toDosDB\", []);\n    } else {\n      setDb(getData(\"toDosDB\"));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TDLContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TDLTitle\",\n      children: \"To dos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TDLContent\",\n      children: db.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TDLContentBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkBox\",\n          checked: value.checked,\n          onChange: () => handleCheck(value.id),\n          className: value.modify ? 'diSable' : \"TDLCheckBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: value.checked ? \"TDLText checked\" : \"TDLText\",\n          children: value.modify ? /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"TDLModifyingText\",\n            placeholder: \"Modifying To Dos\",\n            onChange: e => setTodos(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this) : value.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TDLModifyButtonBox\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"TDLModifyButton\",\n            onClick: () => modifyMode(value.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: value.modify ? \"TDLModifyEndButtonBox\" : \"TDLModifyEndButtonBox diSable\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"TDLModifyEndButton\",\n            onClick: () => modifyEndMode(value.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TDLDeleteButtonBox\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"TDLDeleteButton\",\n            onClick: () => deleteTodos(value.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, value.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TDLInputBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"TDLAddInput\",\n        placeholder: \"\\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        onChange: e => setTodos(e.target.value),\n        value: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"TDLAddButton\",\n        onClick: () => addTodos(todos),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckList, \"5bqLpPLruoDVDIVGVhPimEmk7n8=\");\n_c = CheckList;\nvar _c;\n$RefreshReg$(_c, \"CheckList\");","map":{"version":3,"names":["React","useState","useEffect","getData","setData","isDisabled","CheckList","db","setDb","todos","setTodos","addTodos","value","nextId","length","parseInt","id","toString","content","checked","modify","deleteTodos","index","findIndex","tmp","splice","modifyMode","modifyEndMode","handleCheck","map","e","target"],"sources":["/Users/dohun/rh-project/src/components/CheckList.js"],"sourcesContent":["import React from \"react\";\nimport \"./CheckList.css\";\nimport { useState, useEffect } from \"react\";\nimport { getData, setData } from \"../services/doc.services\";\nimport { isDisabled } from \"@testing-library/user-event/dist/utils\";\n\nexport const CheckList = () => {\n  const [db, setDb] = useState([]);\n  const [todos, setTodos] = useState(\"\");\n\n  const addTodos = (value) => {\n    let nextId;\n    if(db.length === 0){\n        nextId = \"0\"\n    }\n    else{\n        nextId = parseInt(db[db.length - 1].id + 1).toString();\n    }\n    setDb([...db, { content: value, id: nextId, checked: false, modify: false}]);\n    setData(\"toDosDB\", [...db, { content: value, id: nextId, checked: false, modify: false}]);\n    setTodos(\"\"); //todos 값 초기화\n  };\n\n  const deleteTodos = (id) => {\n    let index = db.findIndex((value) => value.id === id);\n    let tmp = [...db];\n    tmp.splice(index, 1);\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n  const modifyMode = (id) => {\n    let index = db.findIndex((value) => value.id === id);\n    let tmp = [...db];\n    tmp[index].modify = true\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n\n  const modifyEndMode = (id) => {\n    let index = db.findIndex((value) => value.id === id);\n    let tmp = [...db];\n    tmp[index].modify = false;\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n\n  //만들고싶은 배열 = 원래배열.splice(index, 1)\n\n  const handleCheck = (id) => {\n    let index = db.findIndex((value) => value.id === id);\n    let tmp = [...db];\n    tmp[index].checked = !tmp[index].checked;\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n\n  useEffect(() => {\n    if (getData(\"toDosDB\") === null) {\n      setData(\"toDosDB\", []);\n    } else {\n      setDb(getData(\"toDosDB\"));\n    }\n  }, []);\n\n  return (\n    <div className=\"TDLContainer\">\n      <div className=\"TDLTitle\">To dos</div>\n      <div className=\"TDLContent\">\n        {db.map((value) => (\n          <div key={value.id} className=\"TDLContentBox\">\n            <input\n              type=\"checkBox\"\n              checked={value.checked}\n              onChange={() => handleCheck(value.id)}\n              className={value.modify ? 'diSable' :\"TDLCheckBox\"}\n            ></input>\n            <div className={value.checked ? \"TDLText checked\" : \"TDLText\"}>\n              {value.modify\n              ? <input \n                  className=\"TDLModifyingText\"\n                  placeholder=\"Modifying To Dos\"\n                  onChange={(e)=> setTodos(e.target.value)}\n                  />\n              :value.content}\n            </div>\n            <div className=\"TDLModifyButtonBox\">\n              <button className=\"TDLModifyButton\" onClick={() => modifyMode(value.id)}></button>\n            </div>\n            <div className={value.modify ? \"TDLModifyEndButtonBox\" : \"TDLModifyEndButtonBox diSable\"}>\n              <button className=\"TDLModifyEndButton\" onClick={()=>modifyEndMode(value.id)}></button>\n            </div>\n            <div className=\"TDLDeleteButtonBox\">\n              <button className=\"TDLDeleteButton\" onClick={() => deleteTodos(value.id)}></button>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"TDLInputBox\">\n        <input\n          className=\"TDLAddInput\"\n          placeholder=\"입력하세요...\"\n          onChange={(e) => setTodos(e.target.value)}\n          value={todos}\n        />\n        <button className=\"TDLAddButton\" onClick={() => addTodos(todos)}>\n          Add\n        </button>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}