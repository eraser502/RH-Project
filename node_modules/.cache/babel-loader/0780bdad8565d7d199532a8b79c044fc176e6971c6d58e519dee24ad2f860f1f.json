{"ast":null,"code":"var _jsxFileName = \"/Users/dohun/rh-project/src/components/TodoCalendar.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"./TodoCalendar.css\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoCalendar = props => {\n  _s();\n  const [value, setValue] = useState(props.pointday);\n  console.log(value);\n\n  //[{date:20221228, todos:[{},{},{}], isCleared:false},     db형식을 이렇게 바꾸기\n  // {date:20221228, todos:[{},{},{}]}]\n\n  // const aa = (date) => {\n  //   let index = db.findIndex((value) => value.date === date); //없으면 -1 반환 \n  // };\n\n  // let marks = [];\n\n  const diaryDBDateArray = props.calendarDb.map(value => value.createdAt.toLocaleDateString());\n  if (props.diaryDB) {\n    for (let i = 0; i < props.diaryDB.length; i++) {\n      let tmp = props.diaryDB[i].createdAt;\n      let tmp2 = moment(tmp).format(\"DD-MM-YYYY\");\n      marks = [...marks, tmp2];\n    }\n  }\n  props.getPointDay(value);\n  return /*#__PURE__*/_jsxDEV(Calendar, {\n    onChange: setValue,\n    value: value,\n    formatDay: (locale, date) => moment(date).format(\"DD\"),\n    tileClassName: _ref => {\n      let {\n        date,\n        view\n      } = _ref;\n      return marks.find(x => x === moment(date).format(\"DD-MM-YYYY\")) ? \"highlight\" : \"\";\n    },\n    tileDisabled: _ref2 => {\n      let {\n        date\n      } = _ref2;\n      return !diaryDBDateArray.includes(date.toLocaleDateString());\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoCalendar, \"XiJfHRJ9G/xy4aq/7ptSVWjPKAw=\");\n_c = TodoCalendar;\nvar _c;\n$RefreshReg$(_c, \"TodoCalendar\");","map":{"version":3,"names":["useState","Calendar","moment","TodoCalendar","props","value","setValue","pointday","console","log","diaryDBDateArray","calendarDb","map","createdAt","toLocaleDateString","diaryDB","i","length","tmp","tmp2","format","marks","getPointDay","locale","date","view","find","x","includes"],"sources":["/Users/dohun/rh-project/src/components/TodoCalendar.js"],"sourcesContent":["import { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"./TodoCalendar.css\";\nimport moment from \"moment\";\n\nexport const TodoCalendar = (props) => {\n  const [value, setValue] = useState(props.pointday);\n  console.log(value);\n\n  //[{date:20221228, todos:[{},{},{}], isCleared:false},     db형식을 이렇게 바꾸기\n  // {date:20221228, todos:[{},{},{}]}]\n\n  // const aa = (date) => {\n  //   let index = db.findIndex((value) => value.date === date); //없으면 -1 반환 \n  // };\n  \n  // let marks = [];\n\n  const diaryDBDateArray = props.calendarDb.map((value) => value.createdAt.toLocaleDateString())\n\n  if (props.diaryDB) {\n      for (let i = 0; i < props.diaryDB.length; i++) {\n          let tmp = props.diaryDB[i].createdAt;\n          let tmp2 = moment(tmp).format(\"DD-MM-YYYY\")\n          marks = [...marks, tmp2]\n\n      }\n  }\n\n  props.getPointDay(value);\n\n  return (\n    <Calendar\n      onChange={setValue}\n      value={value}\n      formatDay={(locale, date) => moment(date).format(\"DD\")}\n      tileClassName={({ date, view }) => marks.find((x) => x === moment(date).format(\"DD-MM-YYYY\")) ? \"highlight\" : \"\"}\n      tileDisabled={({ date }) => !diaryDBDateArray.includes(date.toLocaleDateString())}\n    />\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,oBAAoB;AAC3B,OAAOC,MAAM,MAAM,QAAQ;AAAC;AAE5B,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACI,KAAK,CAACG,QAAQ,CAAC;EAClDC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;;EAElB;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA,MAAMK,gBAAgB,GAAGN,KAAK,CAACO,UAAU,CAACC,GAAG,CAAEP,KAAK,IAAKA,KAAK,CAACQ,SAAS,CAACC,kBAAkB,EAAE,CAAC;EAE9F,IAAIV,KAAK,CAACW,OAAO,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,KAAK,CAACW,OAAO,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MAC3C,IAAIE,GAAG,GAAGd,KAAK,CAACW,OAAO,CAACC,CAAC,CAAC,CAACH,SAAS;MACpC,IAAIM,IAAI,GAAGjB,MAAM,CAACgB,GAAG,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC;MAC3CC,KAAK,GAAG,CAAC,GAAGA,KAAK,EAAEF,IAAI,CAAC;IAE5B;EACJ;EAEAf,KAAK,CAACkB,WAAW,CAACjB,KAAK,CAAC;EAExB,oBACE,QAAC,QAAQ;IACP,QAAQ,EAAEC,QAAS;IACnB,KAAK,EAAED,KAAM;IACb,SAAS,EAAE,CAACkB,MAAM,EAAEC,IAAI,KAAKtB,MAAM,CAACsB,IAAI,CAAC,CAACJ,MAAM,CAAC,IAAI,CAAE;IACvD,aAAa,EAAE;MAAA,IAAC;QAAEI,IAAI;QAAEC;MAAK,CAAC;MAAA,OAAKJ,KAAK,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,KAAKzB,MAAM,CAACsB,IAAI,CAAC,CAACJ,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,WAAW,GAAG,EAAE;IAAA,CAAC;IACjH,YAAY,EAAE;MAAA,IAAC;QAAEI;MAAK,CAAC;MAAA,OAAK,CAACd,gBAAgB,CAACkB,QAAQ,CAACJ,IAAI,CAACV,kBAAkB,EAAE,CAAC;IAAA;EAAC;IAAA;IAAA;IAAA;EAAA,QAClF;AAEN,CAAC;AAAC,GAnCWX,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}