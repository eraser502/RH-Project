{"ast":null,"code":"var _jsxFileName = \"/Users/dohun/rh-project/src/components/CheckList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./CheckList.css\";\nimport { useState, useEffect } from \"react\";\nimport { getData, setData } from \"../services/doc.services\";\nimport { isDisabled } from \"@testing-library/user-event/dist/utils\";\nimport { Modal } from './Modal';\nimport { TodoCalendar } from './TodoCalendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CheckList = () => {\n  _s();\n  //const [db, setDb] = useState([]);\n  const [db, setDb] = useState([{}]);\n  const [todos, setTodos] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [pointday, setPointday] = useState(new Date());\n  let index = db.findIndex(e => e.createAt === pointday.toLocaleDateString());\n  const [currentDb, setCurrentDb] = useState(db[index].todo);\n  const addTodos = value => {\n    // let nextId;\n    // let date = new Date();\n    // let index = db.findIndex((db) => db.createAt === date.toLocaleDateString());\n    // if(db.length === 0){\n    //     nextId = \"0\"\n    // }\n    // else{\n    //     nextId = (parseInt(db[index].todo[db[index].todo.length-1]) + 1).toString();\n    // }\n    // //setDb([...db, { content: value, id: nextId, checked: false, modify:false}]);\n    // setDb([...db, { createAt:date.toLocaleDateString(), todo:[{content: value, id: nextId, checked: false, modify:false}]}]);\n    // if(index === -1){setData(\"toDosDB\", [...db, { createAt:date.toLocaleDateString(), todo:[{content: value, id: nextId, checked: false, modify:false}]}]);}\n    // setTodos(\"\"); //todos 값 초기화\n  };\n  const deleteTodos = id => {\n    let index = db.findIndex(value => value.id === id);\n    let tmp = [...db];\n    tmp.splice(index, 1);\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n  const modifyMode = id => {\n    let index = db.findIndex(value => value.id === id);\n    let tmp = [...db];\n    tmp[index].modify = true;\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n    //console.log(typeof(id))\n  };\n\n  const modifyEndMode = (id, content) => {\n    let index = db.findIndex(value => value.id === id);\n    let tmp = [...db];\n    tmp[index].content = content;\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n\n  //만들고싶은 배열 = 원래배열.splice(index, 1)\n\n  const handleCheck = id => {\n    let index = db.findIndex(value => value.id === id);\n    let tmp = [...db];\n    tmp[index].checked = !tmp[index].checked;\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n  useEffect(() => {\n    if (getData(\"toDosDB\") === null) {\n      setData(\"toDosDB\", []);\n    } else {\n      setDb(getData(\"toDosDB\"));\n    }\n  }, []);\n  useEffect(() => {\n    //todos 가져와서\n  }, [pointday]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TDLContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TDLTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: pointday.toLocaleDateString().slice(0, -1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TDLContent\",\n      children: db.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TDLContentBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkBox\",\n          checked: value.checked,\n          onChange: () => handleCheck(value.id),\n          className: \"TDLCheckBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: value.checked ? \"TDLText checked\" : \"TDLText\",\n          children: value.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TDLModifyButtonBox\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"TDLModifyButton\",\n            onClick: () => {\n              modifyMode(value.id);\n              setModalIsOpen(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), modalIsOpen && value.modify ? /*#__PURE__*/_jsxDEV(Modal, {\n          name: \"TDLModify\",\n          content: value.content,\n          handleClose: () => {\n            setModalIsOpen(false);\n          },\n          TDLmodify: e => {\n            modifyEndMode(value.id, e);\n            value.modify = false;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 14\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TDLDeleteButtonBox\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"TDLDeleteButton\",\n            onClick: () => deleteTodos(value.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, value.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TDLInputBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"TDLAddInput\",\n        placeholder: \"\\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        onChange: e => setTodos(e.target.value),\n        value: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"TDLAddButton\",\n        onClick: () => addTodos(todos),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoCalendar, {\n      pointday: pointday,\n      getPointDay: day => {\n        setPointday(day);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckList, \"xR/65DsDyXyf6d/KUTRyaLrsd8Y=\");\n_c = CheckList;\nvar _c;\n$RefreshReg$(_c, \"CheckList\");","map":{"version":3,"names":["React","useState","useEffect","getData","setData","isDisabled","Modal","TodoCalendar","CheckList","db","setDb","todos","setTodos","modalIsOpen","setModalIsOpen","pointday","setPointday","Date","index","findIndex","e","createAt","toLocaleDateString","currentDb","setCurrentDb","todo","addTodos","value","deleteTodos","id","tmp","splice","modifyMode","modify","modifyEndMode","content","handleCheck","checked","slice","map","target","day"],"sources":["/Users/dohun/rh-project/src/components/CheckList.js"],"sourcesContent":["import React from \"react\";\nimport \"./CheckList.css\";\nimport { useState, useEffect } from \"react\";\nimport { getData, setData } from \"../services/doc.services\";\nimport { isDisabled } from \"@testing-library/user-event/dist/utils\";\nimport { Modal } from './Modal';\nimport { TodoCalendar } from './TodoCalendar';\n\nexport const CheckList = () => {\n  //const [db, setDb] = useState([]);\n  const [db, setDb] = useState([{}]);\n  const [todos, setTodos] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [pointday, setPointday] = useState(new Date());\n  \n  let index = db.findIndex((e) => e.createAt === pointday.toLocaleDateString());\n  const [currentDb, setCurrentDb] = useState(db[index].todo);\n\n  const addTodos = (value) => {\n    // let nextId;\n    // let date = new Date();\n    // let index = db.findIndex((db) => db.createAt === date.toLocaleDateString());\n    // if(db.length === 0){\n    //     nextId = \"0\"\n    // }\n    // else{\n    //     nextId = (parseInt(db[index].todo[db[index].todo.length-1]) + 1).toString();\n    // }\n    // //setDb([...db, { content: value, id: nextId, checked: false, modify:false}]);\n    // setDb([...db, { createAt:date.toLocaleDateString(), todo:[{content: value, id: nextId, checked: false, modify:false}]}]);\n    // if(index === -1){setData(\"toDosDB\", [...db, { createAt:date.toLocaleDateString(), todo:[{content: value, id: nextId, checked: false, modify:false}]}]);}\n    // setTodos(\"\"); //todos 값 초기화\n  };\n\n  const deleteTodos = (id) => {\n    let index = db.findIndex((value) => value.id === id);\n    let tmp = [...db];\n    tmp.splice(index, 1);\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n  const modifyMode = (id) => {\n    let index = db.findIndex((value) => value.id === id);\n    let tmp = [...db];\n    tmp[index].modify = true;\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n    //console.log(typeof(id))\n  };\n  const modifyEndMode = (id, content) => {\n    let index = db.findIndex((value) => value.id === id);\n    let tmp = [...db];\n    tmp[index].content = content;\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n\n  //만들고싶은 배열 = 원래배열.splice(index, 1)\n\n  const handleCheck = (id) => {\n    let index = db.findIndex((value) => value.id === id);\n    let tmp = [...db];\n    tmp[index].checked = !tmp[index].checked;\n    setDb(tmp);\n    setData(\"toDosDB\", tmp);\n  };\n\n  useEffect(() => {\n    if (getData(\"toDosDB\") === null) {\n      setData(\"toDosDB\", []);\n    } else {\n      setDb(getData(\"toDosDB\"));\n    }\n  }, []);\n\n  useEffect(() => {\n    //todos 가져와서\n  }, [pointday]);\n  return (\n    <div className=\"TDLContainer\">\n      <div className=\"TDLTitle\"><span>Todos</span><span>{(pointday.toLocaleDateString()).slice(0, -1)}</span></div>\n      <div className=\"TDLContent\">\n        {db.map((value) => (\n          <div key={value.id} className=\"TDLContentBox\">\n            <input\n              type=\"checkBox\"\n              checked={value.checked}\n              onChange={() => handleCheck(value.id)}\n              className=\"TDLCheckBox\"\n            ></input>\n            <div className={value.checked ? \"TDLText checked\" : \"TDLText\"}>\n              {value.content}\n            </div>\n            <div className=\"TDLModifyButtonBox\">\n              <button className=\"TDLModifyButton\" onClick={() => {modifyMode(value.id);setModalIsOpen(true)}}></button>\n            </div>\n            {modalIsOpen && value.modify\n            ?<Modal name=\"TDLModify\" content={value.content} handleClose={()=>{setModalIsOpen(false)}} TDLmodify={(e)=>{modifyEndMode(value.id, e);value.modify=false}}></Modal>\n            :null}\n            <div className=\"TDLDeleteButtonBox\">\n              <button className=\"TDLDeleteButton\" onClick={() => deleteTodos(value.id)}></button>\n            </div>\n          </div>\n        ))\n        }\n      </div>\n      <div className=\"TDLInputBox\">\n        <input\n          className=\"TDLAddInput\"\n          placeholder=\"입력하세요...\"\n          onChange={(e) => setTodos(e.target.value)}\n          value={todos}\n        />\n        <button className=\"TDLAddButton\" onClick={() => addTodos(todos)}>\n          Add\n        </button>\n      </div>\n      <TodoCalendar pointday={pointday} getPointDay={(day)=>{setPointday(day)}}></TodoCalendar>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}